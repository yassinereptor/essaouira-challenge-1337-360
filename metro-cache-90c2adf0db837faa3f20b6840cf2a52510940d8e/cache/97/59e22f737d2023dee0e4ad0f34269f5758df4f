__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _Module2 = _require(_dependencyMap[0], "./Module");

  var _Module3 = _interopRequireDefault(_Module2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var Location = function (_Module) {
    _inherits(Location, _Module);

    function Location(rnctx) {
      _classCallCheck(this, Location);

      var _this = _possibleConstructorReturn(this, (Location.__proto__ || Object.getPrototypeOf(Location)).call(this, 'Location'));

      _this._rnctx = rnctx;
      var location = window.location;
      _this.href = location.href;
      _this.protocol = location.protocol;
      _this.host = location.host;
      _this.hostname = location.hostname;
      _this.port = location.port;
      _this.search = location.search;
      _this.hash = location.hash;
      _this.username = location.username;
      _this.password = location.password;
      return _this;
    }

    _createClass(Location, [{
      key: "reload",
      value: function reload(forceReload) {
        window.location.reload(forceReload);
      }
    }, {
      key: "replace",
      value: function replace(url) {
        window.location.replace(url);
      }
    }]);

    return Location;
  }(_Module3.default);

  exports.default = Location;
});